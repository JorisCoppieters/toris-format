'use strict'; // JS: ES5

// ******************************
//
//
// HTML DEFINITION FILE
//
//
// ******************************

// ******************************
// Requires:
// ******************************

var grammar = require('./_core');
var re = require('../regexp/shorthand');

// ******************************
// Definition:
// ******************************

module.exports = grammar.export_grammar({
  START: { OPERATOR: '||', SEGMENTS: ['HTML_SEGMENT*'] },
  HTML_SEGMENT: { OPERATOR: '||', SEGMENTS: ['HTML_STYLE', 'HTML_ELEMENT', 'HTML_COMMENT', 'HTML_CONTENT'] },

  HTML_ELEMENT: { STACK: 'HTML_ELEMENT', OPERATOR: '&&', SEGMENTS: ['HTML_OPEN_ELEMENT', 'HTML_SEGMENT*', 'HTML_CLOSE_ELEMENT'] },
  HTML_OPEN_ELEMENT: { STACK: 'HTML_OPEN_ELEMENT', OPERATOR: '&&', SEGMENTS: ['HTML_OPEN_ELEMENT_START', 'HTML_OPEN_ELEMENT_ATTRIBUTE*', 'HTML_OPEN_ELEMENT_END'] },
  HTML_CLOSE_ELEMENT: { STACK: 'HTML_CLOSE_ELEMENT', OPERATOR: '&&', SEGMENTS: ['VAL__ANBRAC_L', 'VAL__SLASH', 'VAL__ELEMENT_NAME', 'VAL__ANBRAC_R'] },

  HTML_OPEN_ELEMENT_START: { OPERATOR: '&&', SEGMENTS: ['VAL__ANBRAC_L', 'VAL__ELEMENT_NAME'] },
  HTML_OPEN_ELEMENT_END: { OPERATOR: '&&', SEGMENTS: ['VAL__SLASH?', 'VAL__ANBRAC_R'] },

  HTML_OPEN_ELEMENT_ATTRIBUTE: { STACK: 'HTML_OPEN_ELEMENT_ATTRIBUTE', OPERATOR: '&&', SEGMENTS: ['VAL__ATTRIBUTE_KEY', 'HTML_ELEMENT_ATTRIBUTE_VALUE_ASSIGN?'] },
  HTML_ELEMENT_ATTRIBUTE_VALUE_ASSIGN: { OPERATOR: '&&', SEGMENTS: ['VAL__EQ', 'HTML_ELEMENT_ATTRIBUTE_VALUE'] },

  HTML_ELEMENT_ATTRIBUTE_VALUE: { STACK: 'HTML_ELEMENT_ATTRIBUTE_VALUE', OPERATOR: '||', SEGMENTS: ['HTML_ELEMENT_ATTRIBUTE_EMPTY_VALUE', 'HTML_ELEMENT_ATTRIBUTE_SINGLE_QUOTED_VALUE', 'HTML_ELEMENT_ATTRIBUTE_DOUBLE_QUOTED_VALUE'] },
  HTML_ELEMENT_ATTRIBUTE_EMPTY_VALUE: { OPERATOR: '&&', SEGMENTS: ['VAL__ATTRIBUTE_VALUE_EMPTY'] },
  HTML_ELEMENT_ATTRIBUTE_SINGLE_QUOTED_VALUE: { OPERATOR: '&&', SEGMENTS: ['VAL__SQUOTE', 'VAL__ATTRIBUTE_ONE_WAY_BINDING?', 'VAL__ATTRIBUTE_VALUE_STRING', 'VAL__SQUOTE'] },
  HTML_ELEMENT_ATTRIBUTE_DOUBLE_QUOTED_VALUE: { OPERATOR: '&&', SEGMENTS: ['VAL__DQUOTE', 'VAL__ATTRIBUTE_ONE_WAY_BINDING?', 'VAL__ATTRIBUTE_VALUE_STRING', 'VAL__DQUOTE'] },

  HTML_STYLE: { STACK: 'HTML_STYLE', OPERATOR: '&&', SEGMENTS: ['VAL__STYLE_OPEN_ELEMENT', 'stylesheet?', 'VAL__STYLE_CLOSE_ELEMENT'] },

  HTML_COMMENT: { STACK: 'HTML_COMMENT', OPERATOR: '&&', SEGMENTS: ['VAL__HTML_COMMENT'] },

  HTML_CONTENT: { STACK: 'HTML_CONTENT', OPERATOR: '&&', SEGMENTS: ['VAL__HTML_CONTENT'] },

  VAL__ELEMENT_NAME: { OPERATOR: '==', VALUE: '[a-zA-Z0-9_-]+' },
  VAL__ATTRIBUTE_KEY: { OPERATOR: '==', VALUE: '[:a-z0-9_-]+' },
  VAL__ATTRIBUTE_VALUE_EMPTY: { OPERATOR: '==', VALUE: re.r_dq('') },
  VAL__ATTRIBUTE_ONE_WAY_BINDING: { OPERATOR: '==', VALUE: '\:\:' },
  VAL__ATTRIBUTE_VALUE_STRING: { OPERATOR: '==', VALUE: '[:a-zA-Z0-9 /\\._-]+' },
  VAL__STYLE_OPEN_ELEMENT: { OPERATOR: '==', VALUE: '<style[^>]*>' },
  VAL__STYLE_CLOSE_ELEMENT: { OPERATOR: '==', VALUE: '<\/style>' },
  VAL__HTML_CONTENT: { OPERATOR: '==', VALUE: '[^<]+' },
  VAL__HTML_COMMENT: { OPERATOR: '==', VALUE: '<!--' + re.r_W + re.r_A + re.r_W + '-->' },
},
// Dependant On:
[
  require('./base'),
  require('./scss')
]);

// ******************************